{"name": "test_manual", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nModuleNotFoundError: No module named 'mocker_over_mock'", "trace": "self = <test_mock_fixture.TestManualMocking object at 0x00000186BAD59840>\n\n    @pytest.mark.xfail(strict=True, msg=\"We want this test to fail.\")\n    def test_manual(self):\n        patcher = mock.patch(\"mocker_over_mock.first_test_fn\", return_value=84)\n>       patcher.start()\n\ntest_mock_fixture.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nC:\\Program Files\\Python310\\lib\\unittest\\mock.py:1585: in start\n    result = self.__enter__()\nC:\\Program Files\\Python310\\lib\\unittest\\mock.py:1421: in __enter__\n    self.target = self.getter()\nC:\\Program Files\\Python310\\lib\\unittest\\mock.py:1608: in <lambda>\n    getter = lambda: _importer(target)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ntarget = 'mocker_over_mock'\n\n    def _importer(target):\n        components = target.split('.')\n        import_path = components.pop(0)\n>       thing = __import__(import_path)\nE       ModuleNotFoundError: No module named 'mocker_over_mock'\n\nC:\\Program Files\\Python310\\lib\\unittest\\mock.py:1247: ModuleNotFoundError"}, "start": 1678268172558, "stop": 1678268172558, "uuid": "7c3d4179-e5e6-46bb-b9f2-03ebfbd2a383", "historyId": "51f3f920e4d9a3cdd065171f221dad14", "testCaseId": "d1594c44f2afd0cc7b08990c0f8bff2b", "fullName": "test_mock_fixture.TestManualMocking#test_manual", "labels": [{"name": "tag", "value": "@pytest.mark.xfail(strict=True, msg='We want this test to fail.')"}, {"name": "suite", "value": "test_mock_fixture"}, {"name": "subSuite", "value": "TestManualMocking"}, {"name": "host", "value": "BAN-LAP-VREDDY"}, {"name": "thread", "value": "7936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_mock_fixture"}]}