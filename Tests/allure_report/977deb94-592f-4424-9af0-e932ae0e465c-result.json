{"name": "test_mocker", "status": "skipped", "statusDetails": {"message": "XFAIL\n\n_pytest.fixtures.FixtureLookupError: ('mocker', <FixtureRequest for <Function test_mocker>>)", "trace": "file D:\\Workspace\\Practice\\project1\\Tests\\test_mock_fixture.py, line 68\n      @pytest.mark.xfail(strict=True, msg=\"We want this test to fail.\")\n      def test_mocker(self, mocker):\nE       fixture 'mocker' not found\n>       available fixtures: _verify_url, base_url, browser, browser_channel, browser_context_args, browser_name, browser_type, browser_type_launch_args, cache, capfd, capfdbinary, caplog, capsys, capsysbinary, context, delete_output_dir, device, doctest_namespace, input_value, is_chromium, is_firefox, is_webkit, launch_browser, mock_fn, monkeypatch, page, playwright, pytestconfig, record_property, record_testsuite_property, record_xml_attribute, recwarn, testrun_uid, tmp_path, tmp_path_factory, tmpdir, tmpdir_factory, worker_id\n>       use 'pytest --fixtures [testpath]' for help on them.\n\nD:\\Workspace\\Practice\\project1\\Tests\\test_mock_fixture.py:68"}, "start": 1678268172967, "stop": 1678268172967, "uuid": "a74007ba-37d4-4c9b-a6e1-01672d4d2fa0", "historyId": "d49c33dea0f2e9fb6c17567303886af9", "testCaseId": "7fd8bf4aaed74058f81d70bbd0fbcd8a", "fullName": "test_mock_fixture.TestMockerFixture#test_mocker", "labels": [{"name": "tag", "value": "@pytest.mark.xfail(strict=True, msg='We want this test to fail.')"}, {"name": "suite", "value": "test_mock_fixture"}, {"name": "subSuite", "value": "TestMockerFixture"}, {"name": "host", "value": "BAN-LAP-VREDDY"}, {"name": "thread", "value": "7936-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_mock_fixture"}]}